# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

strategy:
  matrix:
    linux:
      imageName: 'ubuntu-16.04'
    mac:
      imageName: 'macos-10.13'
      DEVELOPER_DIR: '/Applications/Xcode_10.1.app'
      VCPKG_ALLOW_APPLE_CLANG: true
    windows:
      imageName: 'vs2017-win2016'

variables:
  VCPKG_ROOT: '$(Build.SourcesDirectory)/vcpkg'

pool:
  vmImage: $(imageName)


steps:

  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.6'
      architecture: 'x64'

  - script: 'git submodule update --init --recursive'
    displayName: 'Checkout submodules'
    
  - script: 'python build.py'
    displayName: 'Build vcpkg ports'

  - task: CopyFiles@2
    condition: always() 
    inputs:
      contents: 'vcpkg/buildtrees/*/*.log'
      targetFolder: logs
    
  - task: PublishBuildArtifacts@1
    condition: always() 
    inputs:
      pathtoPublish: logs
      artifactName: vcpkg-logs
    
  - task: PublishPipelineArtifact@0
    inputs:
      artifactName: 'flimfit-env'
      targetPath: 'flimfit-env.zip'

  - task: GithubRelease@0 
    displayName: 'Create GitHub Release'
    inputs:
      githubConnection: seanwarren
      repositoryName: seanwarren/flimfit-env
      assets: '*.zip'